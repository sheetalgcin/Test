name: Telemetry Automation
on:
  push:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

    steps:
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: starting
        channel: '#Telemetry'
        message: Starting Build and Deploy...
        if: always()
        
    - name: Checkout code
      uses: actions/checkout@v3         
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.11'  # Choose your desired Python version
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: ${{ job.status }}
        channel: '#Telemetry'
        message: Build {{ env.GITHUB_REF_NAME }} branch Successfully
        if: always()

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: automation
        tags: |
          type=ref,event=branch
          
    - name: Get the current path
      run: |
           ls  -l
           pwd
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        file: Docker_local
        push: false
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        
    - name: Run a shell command
      run: |
          echo "Hello from the self-hosted runner!"
          #docker run -d --name sheetal  --mount source=app,target=/myvol2 ${{ steps.meta.outputs.tags }}
          docker run -v ${PWD}/output.xml:/app/output.xml ${{ steps.meta.outputs.tags }}
          pwd
          ls -l  /myvol2
          #docker container stop sheetal
          #docker container rm sheetal
          #docker volume rm myvol2
    - name: Download reports
      uses: actions/download-artifact@v1
    - name: Get Repository Owner & Name
      run: |
        export OWNER="$(echo "${{ github.repository }}" | awk -F / '{print $1}' | sed -e "s/:refs//")"
        export REPO="$(echo "${{ github.repository }}" | awk -F / '{print $2}' | sed -e "s/:refs//")"
        echo "::set-env name=REPOSITORY_OWNER::$OWNER"
        echo "::set-env name=REPOSITORY_NAME::$REPO"
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v0.1
      env:
        GH_ACCESS_TOKEN: ${{ secrets.TOKEN }}
        REPO_OWNER: ${{ env.REPOSITORY_OWNER }}
        COMMIT_SHA: ${{ github.sha }}
        REPOSITORY: ${{ env.REPOSITORY_NAME }}
        REPORT_PATH: reports
  


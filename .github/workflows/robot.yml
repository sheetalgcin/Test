name: Telemetry Automation
on:
  push:
    branches: [ "new_actions" ]

jobs:
  tests:
    runs-on: ubuntu-latest
  
    steps:
  

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
            python-version: '3.11'  # Choose your desired Python version
    
    - name: List all files
      run: ls -l    

    - name: Build docker image
      run: docker build -t robot-test-image automate

      
    - name: Run Docker containers with different environment variables and upload output.xml
      run: |
        # Define an array of environment variable sets
         env_vars=("10 20" "15 25" "20 30")
        
        # Loop through the array and run containers with different environment variables
        for env in "${env_vars[@]}"; do
           # Extract 'x' and 'y' values from each element in the array
            x=$(echo $env | cut -d' ' -f1)
            y=$(echo $env | cut -d' ' -f2)

            # Run the Docker container with 'x' and 'y' as separate environment variables
            docker run -e x=$x -e y=$y  --name abc  --mount type=bind,source=$(pwd)/automate,target=/app robot-test-image
            # Upload the output.xml file as an artifact for each iteration
            docker rm abc
        done

    - name: Clean up permissions
      run: sudo chmod -R 777 $(pwd)/automate/output
      
  
    - name: Consolidate Results
      run: |
        # Check if the container exists, and if so, remove it
        docker run  --name abc  -d  robot-test-image
        # Wait for your tests to complete (add a sleep or polling mechanism as needed)
        sleep 2m

        # Merge the output XML files
        docker exec abc  rebot --output /app/output/output.xml /app/output/output_*.xml

    - name: List all files again
      run: ls -l $(pwd)/automate/output
      if: always()
      
 #   - name: Run the docker image
  #    run: docker run --name telemetry-container --mount type=bind,source=$(pwd)/automate,target=/app robot-test-image

    - name: List all files again
      run: ls -l $(pwd)/automate/output
    
    - name: Clean up permissions
      run: sudo chmod -R 777 $(pwd)/automate/output

    - name: Upload Dist
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: automate/output 

    - name: Download artifact
      uses: actions/download-artifact@v3
      id: download
      with:
        name: reports
        path: reports      
  
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v2.3
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          reports/res.xml
   #Remove the image from the local registry
    - name: Remove docker image
      if: always()
      run: |
          docker stop abc
          docker image rm -f robot-test-image

